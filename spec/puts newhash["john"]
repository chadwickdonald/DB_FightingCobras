a.shift
a.push(1)
b = a.shift
b
a.push(b)
a
class Card
    attr_reader :definition
    def initialize(term, definition)
      @term = term
      @definition = definition
    def self.from_string(string)
      args = string.split("\t")
      Card.new(args[0], args[1])
    
    def match_term?(term)
      @term == term
    end
  end
Card.new("foo", "bar")
Card.from_string("Hi\tfoo bar")
card_deck = CardDeck.new
load card_deck.rb
load 'card_deck.rb'
card_deck.read_file("tab_delimited_flashcards-38-terms.txt")
array = ["hello", "there"] 
h = Hash[*array]
array = ["when", "def"]
array[0]
array[1]
puts line
array.each do |line|
puts line[1]
mycard = Card.new("term", "definition")
mycard.display
(1..45).do |n|
(1..45).each do |n|
(1..45).times do |n|
rand(n)
rand(1..45)
t2 = t1 + 180
require 'card.rb'
t1 = Time.now(0)
t1 = Time.at(0)
t1 = Time.now
t2 = Time.now + 180
while t1 < t2 do 
t1 += 1
end
.clear
t1 = Time.now.to_f
t2 = Time.now.to_f + 180
SystemTimer
require 
play.show_card
require './card.rb'
require './card_deck.rb'
require './flashcard_play.rb'
load './flashcard_play.rob'
play.display_definition
load './flashcard_play.rb'
play = Play.new
play.ask_term
Time.now
quit
db = SQLite3::Database.new( "test.db")
rows = db.execute( "select * from test" )
db = SQLite3::Database.new( "dummy.db")
rows = db.execute( "select * from dummy" )
rows = db.execute( "select * from db" )
sqlite3 dummy.db
database.execute("insert into tasks (description, created_at) values ('foo', DATETIME('now'))")
database.execute("select description from tasks")
require 'sqlite3'
database = SQLite3::Database.new('dummy.db')
database.execute("insert into tasks (description, created_at, completed_on) values ('bar', DATETIME('now'), 'NULL')");
database.execute("insert into tasks (description, created_at, completed_on) values (bar, DATETIME('now'), NULL)");
database.execute("select * from tasks")
newhash = { "john" => 1234 }
newhash[:john]
newhash[:"john"]
newhash
newhash["john"]
puts newhash["john"]
string = "Hi my name is Jesse F, I live in or around somewhere in sf, you can reach me jesse@everlane.com or 1900GREATSTYLE, I especially like being an amazingly smart dude."
string.match(/.jesse@everlane.com./)
string.match(/. jesse@everlane.com ./)
jesse = 'crying on wed is ok'
jesse.match(/.is ok./)
a = {}
exit
a = []
a[0] = {}
a[0]["travel_mode"] = "WALKING"
a[0]["travel_mode"]
a = "this is a test"
a.includes("is a")
a.includes?("is a")
a.include?("is a")
a.include?("is v")
